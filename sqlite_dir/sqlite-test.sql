CREATE TABLE IF NOT EXISTS routines (
    Category TEXT,
    Name TEXT,
    Type TEXT,
    URL TEXT
);
INSERT INTO routines ( Category, Name, Type, URL )
VALUES
("REFERENCE" , "twine" , "twine" , "language/glossary#twine"),
("Declarator" , "anon" , "declarator" , "language/variables#The_anon_declarator"),
("REFERENCE" , "Camelia" , "Camelia" , "language/glossary#Camelia"),
("REFERENCE" , "ALAP" , "ALAP" , "language/glossary#ALAP"),
("REFERENCE" , "value" , "value" , "language/glossary#value"),
("REFERENCE" , "Damian Conway" , "Damian Conway" , "language/glossary#Damian_Conway"),
("REFERENCE" , "Parse Tree" , "Parse Tree" , "language/glossary#Parse_tree"),
("Declarator" , "my" , "declarator" , "language/variables#The_my_declarator"),
("REGEXES" , "|" , "|" , "language/regexes#Longest_alternation:_|"),
("SYNTAX" , "rule" , "rule" , "language/grammars#Rules"),
("SYNTAX" , "multi" , "multi" , "language/functions#Multi-dispatch"),
("REFERENCE" , "Apocalypse" , "Apocalypse" , "language/glossary#Apocalypse"),
("REFERENCE" , "whitespace" , "whitespace" , "language/glossary#whitespace"),
("REFERENCE" , "iffy" , "iffy" , "language/glossary#iffy"),
("SYNTAX" , "->" , "->" , "language/functions#Blocks_and_lambdas"),
("REFERENCE" , "TMI" , "TMI" , "language/glossary#TMI"),
("TUTORIAL" , "+= (Basics)" , "+= (Basics)" , "language/101-basics#Any_and_+="),
("REFERENCE" , "P5" , "P5" , "language/glossary#P5"),
("REFERENCE" , "SAP" , "SAP" , "language/glossary#SAP"),
("ADVERBS" , ":continue" , ":continue" , "language/regexes#Continue"),
("REFERENCE" , "Pull request" , "Pull request" , "language/glossary#Pull_request"),
("REFERENCE" , "PERL" , "PERL" , "language/glossary#PERL"),
("REFERENCE" , "IRC lingo" , "IRC lingo" , "language/glossary#IRC_lingo"),
("REFERENCE" , "Thunk" , "Thunk" , "language/glossary#Thunk"),
("CONTROL FLOW" , "next" , "next" , "language/control#next"),
("REFERENCE" , "import" , "import" , "language/glossary#import"),
("REFERENCE" , "LGTM" , "LGTM" , "language/glossary#LGTM"),
("REFERENCE" , "pugs" , "pugs" , "language/glossary#pugs"),
("REGEXES" , "||" , "||" , "language/regexes#Alternation:_||"),
("TUTORIAL" , "BUILD" , "BUILD" , "language/classtut#BUILD"),
("REFERENCE" , "Symbol" , "Symbol" , "language/glossary#Symbol"),
("REFERENCE" , "Huffmanize" , "Huffmanize" , "language/glossary#Huffmanize"),
("TUTORIAL" , "assignment (Basics)" , "assignment (Basics)" , "language/101-basics#Filehandle_and_assignment"),
("REGEXES" , "( )" , "( )" , "language/regexes#Capturing"),
("REFERENCE" , "LHS" , "LHS" , "language/glossary#LHS"),
("REFERENCE" , "multi-method" , "multi-method" , "language/glossary#multi-method"),
("REGEXES" , "\n" , "\n" , "language/regexes#\n_and_\N"),
("METAOPERATORS" , "! (negation metaoperator)" , "! (negation metaoperator)" , "language/operators#Negated_relational_operators"),
("TUTORIAL" , "type object" , "type object" , "language/classtut#A_word_on_types"),
("Twigil" , "^" , "twigil" , "language/variables#The_^_twigil"),
("REGEXES" , "^" , "^" , "language/regexes#Start_of_string_and_end_of_string"),
("REFERENCE" , "fossil" , "fossil" , "language/glossary#fossil"),
("TRAITS" , "is default (Attribute)" , "is default (Attribute)" , "type/Attribute#Trait_is_default"),
("REFERENCE" , "MoarVM" , "MoarVM" , "language/glossary#MoarVM"),
("REGEXES" , "Regex adverbs" , "Regex adverbs" , "language/regexes#Regex_adverbs"),
("REGEXES" , "<( )>" , "<( )>" , "language/regexes#Capture_markers:_&lt;(_)&gt;"),
("Twigil" , "?" , "twigil" , "language/variables#The_?_twigil"),
("REGEXES" , "?" , "?" , "language/regexes#Greedy_versus_frugal_quantifiers:_?"),
("REGEXES" , "\h" , "\h" , "language/regexes#\h_and_\H"),
("REFERENCE" , "Advent Calendar" , "Advent Calendar" , "language/glossary#Advent_calendar"),
("REFERENCE" , "Arity" , "Arity" , "language/glossary#Arity"),
("REFERENCE" , "NST" , "NST" , "language/glossary#NST"),
("SYNTAX" , "proto" , "proto" , "language/functions#proto"),
("TUTORIAL" , "block (Basics)" , "block (Basics)" , "language/101-basics#Lexical_scope_and_block"),
("CONTROL FLOW" , "unless" , "unless" , "language/control#unless"),
("REGEXES" , "S/// non-destructive substitution" , "S/// non-destructive substitution" , "language/regexes#S///_non-destructive_substitution"),
("SYNTAX" , ":sym<>" , ":sym<>" , "language/grammars#Proto_regexes"),
("VARIABLES" , "@_" , "@_" , "language/functions#Automatic_signatures"),
("REFERENCE" , "Spesh" , "Spesh" , "language/glossary#Spesh"),
("Twigil" , "!" , "twigil" , "language/variables#The_!_twigil"),
("REFERENCE" , "PAST" , "PAST" , "language/glossary#PAST"),
("REFERENCE" , "block" , "block" , "language/glossary#block"),
("SYNTAX" , "only" , "only" , "language/functions#only"),
("LANGUAGE" , "Adverb" , "Adverb" , "language/glossary#Adverb"),
("Twigil" , "~" , "twigil" , "language/variables#The_~_twigil"),
("CONTROL FLOW" , "given statement" , "given statement" , "language/control#given_as_a_statement"),
("REFERENCE" , "Perl" , "Perl" , "language/glossary#Perl"),
("CONTROL FLOW" , "when" , "when" , "language/control#when"),
("REGEXES" , "&" , "&" , "language/regexes#Conjunction:_&amp;"),
("REFERENCE" , "Née" , "Née" , "language/glossary#Née"),
("LANGUAGE" , "Autothreading" , "Autothreading" , "language/glossary#Autothreading"),
("CONTROL FLOW" , "start" , "start" , "language/control#start"),
("TUTORIAL" , "single-quoted strings" , "single-quoted strings" , "language/101-basics#Double-quoted_strings_and_single-quoted_strings"),
("METAOPERATORS" , "X (cross metaoperator)" , "X (cross metaoperator)" , "language/operators#Cross_metaoperators"),
("PROGRAMS" , "rakudoc" , "rakudoc" , "programs/02-reading-docs#INTRODUCTION"),
("CONTROL FLOW" , "Phasers" , "Phasers" , "language/control#Phasers"),
("LANGUAGE" , "Adverbial Pair" , "Adverbial Pair" , "language/glossary#Adverbial_pair"),
("REGEXES" , "^^" , "^^" , "language/regexes#Start_of_line_and_end_of_line"),
("REGEXES" , "\v" , "\v" , "language/regexes#\v_and_\V"),
("REGEXES" , ":!" , ":!" , "language/regexes#Enable_greedy_backtracking:_:!"),
("REFERENCE" , "DWIM" , "DWIM" , "language/glossary#DWIM"),
("CONTROL FLOW" , "redo" , "redo" , "language/control#redo"),
("REFERENCE" , "Synopsis" , "Synopsis" , "language/glossary#Synopsis"),
("SYNTAX" , "/ /" , "/ /" , "language/regexes#Lexical_conventions"),
("REFERENCE" , "6model" , "6model" , "language/glossary#6model"),
("REFERENCE" , "Stub" , "Stub" , "language/glossary#Stub"),
("REFERENCE" , "TMTOWTDI" , "TMTOWTDI" , "language/glossary#TMTOWTDI"),
("CONTROL FLOW" , "fail" , "fail" , "language/control#fail"),
("Variable" , "$_" , "variable" , "language/variables#The_$__variable"),
("REFERENCE" , "FTFY" , "FTFY" , "language/glossary#FTFY"),
("REFERENCE" , "Overriding default gist method" , "Overriding default gist method" , "language/classtut#Overriding_default_gist_method"),
("TUTORIAL" , "class" , "class" , "language/classtut#Class"),
("REFERENCE" , "PR" , "PR" , "language/glossary#PR"),
("CONTROL FLOW" , "last" , "last" , "language/control#last"),
("ADVERBS" , ":ignorecase" , ":ignorecase" , "language/regexes#Ignorecase"),
("REGEXES" , "\c" , "\c" , "language/regexes#\c_and_\C"),
("REGEXES" , "<sym>" , "<sym>" , "language/grammars#sym"),
("REFERENCE" , "Parameter" , "Parameter" , "language/glossary#Parameter"),
("REFERENCE" , "Anonymous" , "Anonymous" , "language/glossary#Anonymous"),
("CONTROL FLOW" , "supply emit" , "supply emit" , "language/control#supply/emit"),
("REFERENCE" , "Perl 6" , "Perl 6" , "language/glossary#Perl_6"),
("ADVERBS" , ":global" , ":global" , "language/regexes#Global"),
("Declarator" , "augment" , "declarator" , "language/variables#The_augment_declarator"),
("REGEXES" , ":?" , ":?" , "language/regexes#Enable_frugal_backtracking:_:?"),
("REGEXES" , "<|w>" , "<|w>" , "language/regexes#Word_boundary"),
("Twigil" , "=" , "twigil" , "language/variables#The_=_twigil"),
("REFERENCE" , "NFG" , "NFG" , "language/glossary#NFG"),
("TUTORIAL" , "is rw" , "is rw" , "language/classtut#is_rw_trait"),
("REFERENCE" , "backlog" , "backlog" , "language/glossary#backlog"),
("REFERENCE" , "diffy" , "diffy" , "language/glossary#diffy"),
("REFERENCE" , "Colon Pair" , "Colon Pair" , "language/glossary#Colon_pair_and_colon_list"),
("REGEXES" , "positive lookaround assertion <?>" , "positive lookaround assertion <?>" , "language/regexes#Lookaround_assertions"),
("Twigil" , "*" , "twigil" , "language/variables#The_*_twigil"),
("REGEXES" , "*" , "*" , "language/regexes#Zero_or_more:_*"),
("REFERENCE" , "PB" , "PB" , "language/glossary#PB"),
("METAOPERATORS" , "S" , "S" , "language/operators#Sequential_operators"),
("REFERENCE" , "Exegesis" , "Exegesis" , "language/glossary#Exegesis"),
("Twigil" , ":" , "twigil" , "language/variables#The_:_twigil"),
("REGEXES" , ":" , ":" , "language/regexes#Disable_backtracking:_:"),
("TUTORIAL" , "FQN" , "FQN" , "language/classtut#Private_methods"),
("REFERENCE" , "IRC" , "IRC" , "language/glossary#IRC"),
("TUTORIAL" , "autovivification (Basics)" , "autovivification (Basics)" , "language/101-basics#Fat_arrow,_pairs_and_autovivification"),
("CONTROL FLOW" , "repeat" , "repeat" , "language/control#repeat/while,_repeat/until"),
("ADVERBS" , ":samecase" , ":samecase" , "language/regexes#Samecase"),
("REFERENCE" , "Sigilless Variable" , "Sigilless Variable" , "language/glossary#Sigilless_variable"),
("REFERENCE" , "bytecode" , "bytecode" , "language/glossary#bytecode"),
("TUTORIAL" , "preincrement (Basics)" , "preincrement (Basics)" , "language/101-basics#Postincrement_and_preincrement"),
("CONTROL FLOW" , "return" , "return" , "language/control#return"),
("REFERENCE" , "LHF" , "LHF" , "language/glossary#LHF"),
("REFERENCE" , "Repository" , "Repository" , "language/glossary#Repository"),
("REFERENCE" , "Type Smiley" , "Type Smiley" , "language/glossary#Type_smiley"),
("REGEXES" , "\s" , "\s" , "language/regexes#\s_and_\S"),
("REFERENCE" , "Bot" , "Bot" , "language/glossary#Bot"),
("CONTROL FLOW" , "if" , "if" , "language/control#if"),
("SUBROUTINES" , "nextcallee" , "nextcallee" , "language/functions#sub_nextcallee"),
("REFERENCE" , "P6" , "P6" , "language/glossary#P6"),
("Variable" , "@" , "variable" , "language/variables#The_@_variable"),
("TRAITS" , "is rw (Attribute)" , "is rw (Attribute)" , "type/Attribute#trait_is_rw"),
("REFERENCE" , "POV" , "POV" , "language/glossary#POV"),
("REGEXES" , "tilde" , "tilde" , "language/regexes#Tilde_for_nesting_structures"),
("REGEXES" , "TOP" , "TOP" , "language/grammars#TOP"),
("VARIABLES" , "&?BLOCK" , "&?BLOCK" , "language/variables#&amp;?BLOCK"),
("REFERENCE" , "Not Quite Perl" , "Not Quite Perl" , "language/glossary#NQP"),
("REFERENCE" , "Value type" , "Value type" , "language/glossary#Value_type"),
("REFERENCE" , "Community" , "Community" , "language/glossary#Community"),
("REFERENCE" , "WW" , "WW" , "language/glossary#WW"),
("ADVERBS" , ":exhaustive" , ":exhaustive" , "language/regexes#Exhaustive"),
("REFERENCE" , "Virtual Machine" , "Virtual Machine" , "language/glossary#Virtual_machine"),
("REFERENCE" , "Variable" , "Variable" , "language/glossary#Variable"),
("CONTROL FLOW" , "gather take" , "gather take" , "language/control#gather/take"),
("REFERENCE" , "compunit (glossary)" , "compunit (glossary)" , "language/glossary#Compilation_unit_or_compunit"),
("REFERENCE" , "Niecza" , "Niecza" , "language/glossary#Niecza"),
("REFERENCE" , "QAST" , "QAST" , "language/glossary#QAST"),
("ADVERBS" , ":ratchet" , ":ratchet" , "language/regexes#Ratchet"),
("REFERENCE" , "IMHO" , "IMHO" , "language/glossary#IMHO"),
("TUTORIAL" , "scalar (Basics)" , "scalar (Basics)" , "language/101-basics#Scalar"),
("REFERENCE" , "Mayspec" , "Mayspec" , "language/glossary#Mayspec"),
("REGEXES" , "Named captures" , "Named captures" , "language/regexes#Named_captures"),
("ADVERBS" , ":x" , ":x" , "language/regexes#Counting"),
("REFERENCE" , "opcode" , "opcode" , "language/glossary#opcode"),
("REFERENCE" , "RSN" , "RSN" , "language/glossary#RSN"),
("REFERENCE" , "property" , "property" , "language/glossary#property"),
("REFERENCE" , "Parrot" , "Parrot" , "language/glossary#Parrot"),
("REFERENCE" , "RHS" , "RHS" , "language/glossary#RHS"),
("REFERENCE" , "Abstract Class" , "Abstract Class" , "language/glossary#Abstract_class"),
("CONTROL FLOW" , "default when" , "default when" , "language/control#default_and_when"),
("VARIABLES" , "$?DISTRIBUTION" , "$?DISTRIBUTION" , "language/variables#$?DISTRIBUTION"),
("LANGUAGE" , "Allomorph" , "Allomorph" , "language/glossary#Allomorph"),
("REGEXES" , "[ ]" , "[ ]" , "language/regexes#Non-capturing_grouping"),
("REFERENCE" , "API" , "API" , "language/glossary#API"),
("REFERENCE" , "Rakudo" , "Rakudo" , "language/glossary#Rakudo"),
("SUBROUTINES" , "callwith" , "callwith" , "language/functions#sub_callwith"),
("REFERENCE" , "Reify" , "Reify" , "language/glossary#Reify"),
("TUTORIAL" , "twigils" , "twigils" , "language/classtut#Twigil_$!"),
("REFERENCE" , "Type Objects" , "Type Objects" , "language/glossary#Type_objects"),
("TUTORIAL" , "inheritance" , "inheritance" , "language/classtut#Inheritance"),
("REFERENCE" , "binder" , "binder" , "language/glossary#binder"),
("REFERENCE" , "Backtracking" , "Backtracking" , "language/glossary#Backtracking"),
("TUTORIAL" , "topic variable (Basics)" , "topic variable (Basics)" , "language/101-basics#Topic_variable"),
("ADVERBS" , ":overlap" , ":overlap" , "language/regexes#Overlap"),
("REGEXES" , "&&" , "&&" , "language/regexes#Conjunction:_&amp;&amp;"),
("REGEXES" , "ws" , "ws" , "language/grammars#ws"),
("SYNTAX" , "token" , "token" , "language/grammars#Named_Regexes"),
("REFERENCE" , "autopun" , "autopun" , "language/glossary#autopun"),
("REFERENCE" , "TIMTOWTDI" , "TIMTOWTDI" , "language/glossary#TIMTOWTDI"),
("SYNTAX" , "regex" , "regex" , "language/regexes#Subrules"),
("REFERENCE" , "Propspec" , "Propspec" , "language/glossary#Propspec"),
("REGEXES" , "before" , "before" , "language/regexes#Lookahead_assertions"),
("TUTORIAL" , "attributes" , "attributes" , "language/classtut#Attributes"),
("REGEXES" , "\w" , "\w" , "language/regexes#\w_and_\W"),
("REFERENCE" , "Tight" , "Tight" , "language/glossary#Tight_and_loose_precedence"),
("CONTROL FLOW" , "loop" , "loop" , "language/control#loop"),
("METAOPERATORS" , "Z (zip metaoperator)" , "Z (zip metaoperator)" , "language/operators#Zip_metaoperator"),
("CONTROL FLOW" , "return-rw" , "return-rw" , "language/control#return-rw"),
("REFERENCE" , "rvalue" , "rvalue" , "language/glossary#rvalue"),
("REFERENCE" , "Token" , "Token" , "language/glossary#token"),
("SUBROUTINES" , "samewith" , "samewith" , "language/functions#sub_samewith"),
("REGEXES" , "? (quantifier)" , "? (quantifier)" , "language/regexes#Zero_or_one:_?"),
("VARIABLES" , "$<named>" , "$<named>" , "language/variables#Named_attributes"),
("REFERENCE" , "gradual typing" , "gradual typing" , "language/glossary#gradual_typing"),
("CONTROL FLOW" , "for" , "for" , "language/control#for"),
("CONTROL FLOW" , "with orwith without" , "with orwith without" , "language/control#with_orwith_without"),
("ADVERBS" , ":sigspace" , ":sigspace" , "language/regexes#Sigspace"),
("REGEXES" , "Actions" , "Actions" , "language/grammars#Action_objects"),
("LANGUAGE" , "closures" , "closures" , "language/functions#Closures"),
("TRAITS" , "is required (Attribute)" , "is required (Attribute)" , "type/Attribute#Trait_is_required"),
("REFERENCE" , "Multi-Dispatch" , "Multi-Dispatch" , "language/glossary#Multi-dispatch"),
("REGEXES" , "\x" , "\x" , "language/regexes#\x_and_\X"),
("REFERENCE" , "decont" , "decont" , "language/glossary#decont"),
("REFERENCE" , "Semilist" , "Semilist" , "language/glossary#Semilist"),
("Variable" , "$/" , "variable" , "language/variables#The_$/_variable"),
("REFERENCE" , "lvalue" , "lvalue" , "language/glossary#lvalue"),
("SUBROUTINES" , "callsame" , "callsame" , "language/functions#sub_callsame"),
("REFERENCE" , "IIRC" , "IIRC" , "language/glossary#IIRC"),
("OPERATORS" , "<<" , "<<" , "language/operators#Hyper_operators"),
("REFERENCE" , "WIP" , "WIP" , "language/glossary#WIP"),
("REFERENCE" , "Syntax Analysis" , "Syntax Analysis" , "language/glossary#Syntax_analysis"),
("LANGUAGE" , "ASCII operator" , "ASCII operator" , "language/glossary#ASCII_operator"),
("REFERENCE" , "Invocant" , "Invocant" , "language/glossary#Invocant"),
("ADVERBS" , ":pos" , ":pos" , "language/regexes#Pos"),
("TUTORIAL" , "DESTROY" , "DESTROY" , "language/classtut#Destruction"),
("REFERENCE" , "WAT" , "WAT" , "language/glossary#WAT"),
("CONTROL FLOW" , "succeed" , "succeed" , "language/control#proceed_and_succeed"),
("Variable" , "$" , "variable" , "language/variables#The_$_variable"),
("CONTROL FLOW" , "once" , "once" , "language/control#once"),
("REFERENCE" , "Sigil" , "Sigil" , "language/glossary#Sigil"),
("REFERENCE" , "Operator" , "Operator" , "language/glossary#Operator"),
("REFERENCE" , "STD" , "STD" , "language/glossary#STD"),
("REFERENCE" , "UGT" , "UGT" , "language/glossary#UGT"),
("TUTORIAL" , "invocant (Basics)" , "invocant (Basics)" , "language/101-basics#Arrays,_methods_and_invocants"),
("REFERENCE" , "Literal" , "Literal" , "language/glossary#Literal"),
("VARIABLES" , "$0" , "$0" , "language/variables#Positional_attributes"),
("REFERENCE" , "TimToady" , "TimToady" , "language/glossary#TimToady"),
("REFERENCE" , "WP" , "WP" , "language/glossary#WP"),
("CONTROL FLOW" , "given" , "given" , "language/control#given"),
("REFERENCE" , "Variable Interpolation" , "Variable Interpolation" , "language/glossary#Variable_interpolation"),
("REFERENCE" , "Larry Wall" , "Larry Wall" , "language/glossary#Larry_Wall"),
("REFERENCE" , "LTA" , "LTA" , "language/glossary#LTA"),
("TUTORIAL" , "variable interpolation (Basics)" , "variable interpolation (Basics)" , "language/101-basics#Variable_interpolation"),
("REGEXES" , "**" , "**" , "language/regexes#General_quantifier:_**_min..max"),
("REFERENCE" , "flap" , "flap" , "language/glossary#flap"),
("SYNTAX" , "Twigil" , "Twigil" , "language/variables#Twigils"),
("Declarator" , "our" , "declarator" , "language/variables#The_our_declarator"),
("TUTORIAL" , "Constructor" , "Constructor" , "language/classtut#Construction"),
("ADVERBS" , ":1st" , ":1st" , "language/regexes#Positional_adverbs"),
("REFERENCE" , "IWBN" , "IWBN" , "language/glossary#IWBN"),
("SYNTAX" , "sub" , "sub" , "language/functions#Subroutines"),
("REFERENCE" , "instance" , "instance" , "language/glossary#Instance"),
("REFERENCE" , "RT" , "RT" , "language/glossary#RT"),
("REGEXES" , "\t" , "\t" , "language/regexes#\t_and_\T"),
("ADVERBS" , ":samemark" , ":samemark" , "language/regexes#Samemark"),
("REFERENCE" , "role" , "role" , "language/glossary#Roles"),
("LANGUAGE" , "Argument" , "Argument" , "language/functions#Arguments"),
("CONTROL FLOW" , "do" , "do" , "language/control#do"),
("REFERENCE" , "test suite" , "test suite" , "language/glossary#Test_suite"),
("CONTROL FLOW" , "statements" , "statements" , "language/control#Statements"),
("METAOPERATORS" , "R" , "R" , "language/operators#Reversed_operators"),
("TUTORIAL" , "identifiers (Basics)" , "identifiers (Basics)" , "language/101-basics#Sigils_and_identifiers"),
("Variable" , "$!" , "variable" , "language/variables#The_$!_variable"),
("REGEXES" , "<[ ]>" , "<[ ]>" , "language/regexes#Enumerated_character_classes_and_ranges"),
("LANGUAGE" , "Creating grammars" , "Creating grammars" , "language/grammars#Creating_grammars"),
("TUTORIAL" , "for (Basics)" , "for (Basics)" , "language/101-basics#for_and_blocks"),
("REFERENCE" , "NYI" , "NYI" , "language/glossary#NYI"),
("REFERENCE" , "Mainline" , "Mainline" , "language/glossary#Mainline"),
("TUTORIAL" , "hash (Basics)" , "hash (Basics)" , "language/101-basics#Hashes"),
("TUTORIAL" , "TWEAK" , "TWEAK" , "language/classtut#TWEAK"),
("REFERENCE" , "Lexing" , "Lexing" , "language/glossary#Lexing"),
("REGEXES" , "Regex Interpolation" , "Regex Interpolation" , "language/regexes#Regex_interpolation"),
("REGEXES" , "after" , "after" , "language/regexes#Lookbehind_assertions"),
("ADVERBS" , ":ignoremark" , ":ignoremark" , "language/regexes#Ignoremark"),
("REFERENCE" , "POD" , "POD" , "language/glossary#POD"),
("REFERENCE" , "NQP" , "NQP" , "language/glossary#Not_Quite_Perl"),
("REFERENCE" , "WFM" , "WFM" , "language/glossary#WFM"),
("VARIABLES" , "%?RESOURCES" , "%?RESOURCES" , "language/variables#%?RESOURCES"),
("REGEXES" , "<:property>" , "<:property>" , "language/regexes#Unicode_properties"),
("CONTROL FLOW" , "else elsif" , "else elsif" , "language/control#else/elsif"),
("Twigil" , "." , "twigil" , "language/variables#The_._twigil"),
("REGEXES" , "." , "." , "language/regexes#Wildcards"),
("REFERENCE" , "Truthy" , "Truthy" , "language/glossary#Truthy_and_Falsy"),
("SYNTAX" , "s/ / /" , "s/ / /" , "language/regexes#Lexical_conventions_0"),
("REFERENCE" , "TheDamian" , "TheDamian" , "language/glossary#TheDamian"),
("CONTROL FLOW" , "blocks" , "blocks" , "language/control#Blocks"),
("REFERENCE" , "Opt" , "Opt" , "language/glossary#Opt"),
("REFERENCE" , "UB" , "UB" , "language/glossary#UB"),
("TRAITS" , "is tighter" , "is tighter" , "language/functions#Precedence"),
("SUBROUTINES" , "nextwith" , "nextwith" , "language/functions#sub_nextwith"),
("Declarator" , "has" , "declarator" , "language/variables#The_has_declarator"),
("TUTORIAL" , "string literal (Basics)" , "string literal (Basics)" , "language/101-basics#String_literals"),
("REFERENCE" , "Interface" , "Interface" , "language/glossary#Interface"),
("Declarator" , "also" , "declarator" , "language/classtut#The_also_declarator"),
("VARIABLES" , "&?ROUTINE" , "&?ROUTINE" , "language/variables#&amp;?ROUTINE"),
("LANGUAGE" , "wrapped routines" , "wrapped routines" , "language/functions#Wrapped_routines"),
("REGEXES" , "\d" , "\d" , "language/regexes#\d_and_\D"),
("TRAITS" , "is built (Attribute)" , "is built (Attribute)" , "type/Attribute#trait_is_built"),
("CONTROL FLOW" , "while until" , "while until" , "language/control#while,_until"),
("TRAITS" , "is DEPRECATED (Attribute)" , "is DEPRECATED (Attribute)" , "type/Attribute#trait_is_DEPRECATED"),
("Variable" , "%" , "variable" , "language/variables#The_%_variable"),
("REGEXES" , "%" , "%" , "language/regexes#Modified_quantifier:_%,_%%"),
("REFERENCE" , "Handle" , "Handle" , "language/glossary#Handle"),
("ADVERBS" , ":samespace" , ":samespace" , "language/regexes#Samespace"),
("TUTORIAL" , "statement (Basics)" , "statement (Basics)" , "language/101-basics#Statements"),
("SUBROUTINES" , "nextsame" , "nextsame" , "language/functions#sub_nextsame"),
("Declarator" , "state" , "declarator" , "language/variables#The_state_declarator"),
("REGEXES" , "<?>" , "<?>" , "language/grammars#&quot;Always_succeed&quot;_assertion"),
("REFERENCE" , "roast" , "roast" , "language/glossary#roast"),
("REFERENCE" , "fiddly" , "fiddly" , "language/glossary#fiddly"),
("REGEXES" , "+" , "+" , "language/regexes#One_or_more:_+"),
("REFERENCE" , "FSVO" , "FSVO" , "language/glossary#FSVO"),
("REGEXES" , "recursive" , "recursive" , "language/regexes#Recursive_Regexes"),
("Operator" , "xx" , "infix" , "language/operators#infix_xx"),
("Operator" , "Z" , "infix" , "language/operators#infix_Z"),
("Routine" , "parse-base" , "routine" , "type/Str#routine_parse-base"),
("Method" , "univals" , "method" , "type/Str#method_univals"),
("Operator" , "not" , "prefix" , "language/operators#prefix_not"),
("Operator" , ",=" , "postfix" , "language/operators#postfix_,="),
("Operator" , "&lt;=&gt;" , "infix" , "language/operators#infix_&lt;=&gt;"),
("Routine" , "samemark" , "routine" , "type/Str#routine_samemark"),
("Operator" , "^ff" , "infix" , "language/operators#infix_^ff"),
("Method" , "line" , "method" , "type/CallFrame#method_line"),
("Operator" , "(^), infix ⊖" , "infix" , "language/operators#infix_(^),_infix_⊖"),
("Method" , "Rat" , "method" , "type/Str#method_Rat"),
("Operator" , "gcd" , "infix" , "language/operators#infix_gcd"),
("Method" , "roll" , "method" , "type/Baggy#method_roll"),
("Operator" , "⊈" , "infix" , "language/operators#infix_⊈"),
("Method" , "trim-trailing" , "method" , "type/Str#method_trim-trailing"),
("Operator" , "/" , "infix" , "language/operators#infix_/"),
("Operator" , "?|" , "infix" , "language/operators#infix_?|"),
("Operator" , "?&amp;" , "infix" , "language/operators#infix_?&amp;"),
("Sub" , "done" , "sub" , "type/independent-routines#sub_done"),
("Method" , "set_value" , "method" , "type/Attribute#method_set_value"),
("Operator" , "..^" , "infix" , "language/operators#infix_..^"),
("Operator" , "//" , "prefix" , "language/operators#prefix_//"),
("Operator" , "//" , "infix" , "language/operators#infix_//"),
("Method" , "substr-rw" , "method" , "type/Str#method_substr-rw"),
("Method" , "pick" , "method" , "type/Baggy#method_pick"),
("Method" , "ends-with" , "method" , "type/Str#method_ends-with"),
("Sub" , "print" , "sub" , "type/independent-routines#sub_print"),
("Operator" , "^" , "prefix" , "language/operators#prefix_^"),
("Operator" , "^" , "infix" , "language/operators#infix_^"),
("Method" , "unival" , "method" , "type/Str#method_unival"),
("Term" , "&lt; &gt;" , "term" , "language/operators#term_&lt;_&gt;"),
("Operator" , "&lt; &gt;" , "postcircumfix" , "language/operators#postcircumfix_&lt;_&gt;"),
("Sub" , "chdir" , "sub" , "type/independent-routines#sub_chdir"),
("Operator" , "min" , "infix" , "language/operators#infix_min"),
("Sub" , "slurp" , "sub" , "type/independent-routines#sub_slurp"),
("Sub" , "callframe" , "sub" , "type/CallFrame#sub_callframe"),
("Operator" , "???" , "listop" , "language/operators#listop_???"),
("Sub" , "shift" , "sub" , "type/independent-routines#sub_shift"),
("Method" , "pickpairs" , "method" , "type/Baggy#method_pickpairs"),
("Operator" , "^..^" , "infix" , "language/operators#infix_^..^"),
("Routine" , "chars" , "routine" , "type/Str#routine_chars"),
("Operator" , "le" , "infix" , "language/operators#infix_le"),
("Sub" , "MAIN" , "sub" , "language/functions#sub_MAIN"),
("Routine" , "comb" , "routine" , "type/Str#routine_comb"),
("Method" , "substr-eq" , "method" , "type/Str#method_substr-eq"),
("Operator" , "(&lt;=), infix ⊆" , "infix" , "language/operators#infix_(&lt;=),_infix_⊆"),
("Operator" , "notandthen" , "infix" , "language/operators#infix_notandthen"),
("Routine" , "split" , "routine" , "type/Str#routine_split"),
("Routine" , "unpolar" , "routine" , "type/independent-routines#routine_unpolar"),
("Operator" , "&gt;" , "infix" , "language/operators#infix_&gt;"),
("Method" , "kv" , "method" , "type/Baggy#method_kv"),
("Term" , "{ }" , "term" , "language/operators#term_{_}"),
("Operator" , "{ }" , "postcircumfix" , "language/operators#postcircumfix_{_}"),
("Method" , "pred" , "method" , "type/Str#method_pred"),
("Method" , "get_value" , "method" , "type/Attribute#method_get_value"),
("Operator" , "&lt;=, infix ≤" , "infix" , "language/operators#infix_&lt;=,_infix_≤"),
("Method" , "index" , "method" , "type/Str#method_index"),
("Operator" , "minmax" , "infix" , "language/operators#infix_minmax"),
("Operator" , "unicmp" , "infix" , "language/operators#infix_unicmp"),
("Sub" , "indir" , "sub" , "type/independent-routines#sub_indir"),
("Operator" , "&amp;&amp;" , "infix" , "language/operators#infix_&amp;&amp;"),
("Operator" , "orelse" , "infix" , "language/operators#infix_orelse"),
("Sub" , "push" , "sub" , "type/independent-routines#sub_push"),
("Operator" , "," , "infix" , "language/operators#infix_,"),
("Method" , "invert" , "method" , "type/Baggy#method_invert"),
("Method" , "name" , "method" , "type/Attribute#method_name"),
("Method" , "default" , "method" , "type/Baggy#method_default"),
("Method" , "Int" , "method" , "type/StrDistance#method_Int"),
("Method" , "Int" , "method" , "type/Str#method_Int"),
("Operator" , "eq" , "infix" , "language/operators#infix_eq"),
("Method" , "has_accessor" , "method" , "type/Attribute#method_has_accessor"),
("Method" , "kxxv" , "method" , "type/Baggy#method_kxxv"),
("Method" , "code" , "method" , "type/CallFrame#method_code"),
("Operator" , "?? !!" , "infix" , "language/operators#infix_??_!!"),
("Operator" , "..." , "infix" , "language/operators#infix_..."),
("Operator" , "..." , "listop" , "language/operators#listop_..."),
("Operator" , "(cont), infix ∋" , "infix" , "language/operators#infix_(cont),_infix_∋"),
("Sub" , "get" , "sub" , "type/independent-routines#sub_get"),
("Operator" , "= (list assignment)" , "infix" , "language/operators#infix_=_(list_assignment)"),
("Method" , "total" , "method" , "type/Baggy#method_total"),
("Method" , "indices" , "method" , "type/Str#method_indices"),
("Operator" , "|" , "prefix" , "language/operators#prefix_|"),
("Operator" , "|" , "infix" , "language/operators#infix_|"),
("Operator" , "!" , "prefix" , "language/operators#prefix_!"),
("Routine" , "substr" , "routine" , "type/Str#routine_substr"),
("Operator" , "===, infix ⩶" , "infix" , "language/operators#infix_===,_infix_⩶"),
("Operator" , "⊅" , "infix" , "language/operators#infix_⊅"),
("Operator" , "+" , "prefix" , "language/operators#prefix_+"),
("Operator" , "+" , "infix" , "language/operators#infix_+"),
("Operator" , ".=" , "infix" , "language/operators#infix_.="),
("Operator" , "(elem), infix ∈" , "infix" , "language/operators#infix_(elem),_infix_∈"),
("Operator" , "⊄" , "infix" , "language/operators#infix_⊄"),
("Operator" , "&gt;=, infix ≥" , "infix" , "language/operators#infix_&gt;=,_infix_≥"),
("Operator" , "==&gt;" , "infix" , "language/operators#infix_==&gt;"),
("Method" , "proc" , "method" , "type/X/Proc/Unsuccessful#method_proc"),
("Operator" , "+|" , "infix" , "language/operators#infix_+|"),
("Operator" , "?" , "prefix" , "language/operators#prefix_?"),
("Routine" , "tclc" , "routine" , "type/Str#routine_tclc"),
("Method" , "succ" , "method" , "type/Str#method_succ"),
("Operator" , "temp" , "prefix" , "language/operators#prefix_temp"),
("Operator" , "temp" , "prefix" , "language/variables#The_temp_prefix"),
("Sub" , "getc" , "sub" , "type/independent-routines#sub_getc"),
("Method" , "type" , "method" , "type/Attribute#method_type"),
("Method" , "antipairs" , "method" , "type/Baggy#method_antipairs"),
("Method" , "NFD" , "method" , "type/Str#method_NFD"),
("Operator" , "so" , "prefix" , "language/operators#prefix_so"),
("Sub" , "&amp;*chdir" , "sub" , "type/independent-routines#sub_&amp;*chdir"),
("Method" , "contains" , "method" , "type/Str#method_contains"),
("Operator" , "!!!" , "listop" , "language/operators#listop_!!!"),
("Method" , "Str" , "method" , "type/StrDistance#method_Str"),
("Method" , "match" , "method" , "type/Str#method_match"),
("Operator" , "~^" , "prefix" , "language/operators#prefix_~^"),
("Operator" , "~^" , "infix" , "language/operators#infix_~^"),
("Method" , "ords" , "method" , "type/Str#method_ords"),
("Method" , "grabpairs" , "method" , "type/Baggy#method_grabpairs"),
("Routine" , "fc" , "routine" , "type/Str#routine_fc"),
("Operator" , "leg" , "infix" , "language/operators#infix_leg"),
("Operator" , "^fff" , "infix" , "language/operators#infix_^fff"),
("Operator" , "eqv" , "infix" , "language/operators#infix_eqv"),
("Routine" , "wordcase" , "routine" , "type/Str#routine_wordcase"),
("Operator" , "div" , "infix" , "language/operators#infix_div"),
("Operator" , "(-), infix ∖" , "infix" , "language/operators#infix_(-),_infix_∖"),
("Operator" , "(.), infix ⊍" , "infix" , "language/operators#infix_(.),_infix_⊍"),
("Operator" , "gt" , "infix" , "language/operators#infix_gt"),
("Operator" , "--" , "prefix" , "language/operators#prefix_--"),
("Operator" , "--" , "postfix" , "language/operators#postfix_--"),
("Operator" , "~|" , "infix" , "language/operators#infix_~|"),
("Method" , "returns" , "method" , "type/Signature#method_returns"),
("Sub" , "exit" , "sub" , "type/independent-routines#sub_exit"),
("Sub" , "repl" , "sub" , "type/independent-routines#sub_repl"),
("Method" , "samecase" , "method" , "type/Str#method_samecase"),
("Routine" , "sprintf" , "routine" , "type/independent-routines#routine_sprintf"),
("Operator" , "&amp;" , "infix" , "language/operators#infix_&amp;"),
("Routine" , "ord" , "routine" , "type/Str#routine_ord"),
("Method" , "my" , "method" , "type/CallFrame#method_my"),
("Operator" , "^^" , "infix" , "language/operators#infix_^^"),
("Operator" , ":=" , "infix" , "language/operators#infix_:="),
("Routine" , "uniparse" , "routine" , "type/Str#routine_uniparse"),
("Sub" , "say" , "sub" , "type/independent-routines#sub_say"),
("Operator" , "+^" , "prefix" , "language/operators#prefix_+^"),
("Operator" , "+^" , "infix" , "language/operators#infix_+^"),
("Sub" , "append" , "sub" , "type/independent-routines#sub_append"),
("Method" , "trim" , "method" , "type/Str#method_trim"),
("Sub" , "chmod" , "sub" , "type/independent-routines#sub_chmod"),
("Operator" , "(&gt;=), infix ⊇" , "infix" , "language/operators#infix_(&gt;=),_infix_⊇"),
("Operator" , ".." , "infix" , "language/operators#infix_.."),
("Method" , "NFKD" , "method" , "type/Str#method_NFKD"),
("Sub" , "run" , "sub" , "type/independent-routines#sub_run"),
("Method" , "gist" , "method" , "type/Attribute#method_gist"),
("Method" , "trim-leading" , "method" , "type/Str#method_trim-leading"),
("Method" , "Set" , "method" , "type/Baggy#method_Set"),
("Method" , "classify-list" , "method" , "type/Baggy#method_classify-list"),
("Routine" , "note" , "routine" , "type/independent-routines#routine_note"),
("Operator" , "ff" , "infix" , "language/operators#infix_ff"),
("Operator" , "?^" , "prefix" , "language/operators#prefix_?^"),
("Operator" , "?^" , "infix" , "language/operators#infix_?^"),
("Operator" , "∉" , "infix" , "language/operators#infix_∉"),
("Operator" , "!=, infix ≠" , "infix" , "language/operators#infix_!=,_infix_≠"),
("Method" , "subst" , "method" , "type/Str#method_subst"),
("Method" , "count" , "method" , "type/Signature#method_count"),
("Operator" , "fff" , "infix" , "language/operators#infix_fff"),
("Method" , "package" , "method" , "type/Attribute#method_package"),
("Operator" , "+&amp;" , "infix" , "language/operators#infix_+&amp;"),
("Operator" , "." , "infix" , "language/operators#infix_."),
("Method" , "arity" , "method" , "type/Signature#method_arity"),
("Operator" , "let" , "prefix" , "language/operators#prefix_let"),
("Operator" , "let" , "prefix" , "language/variables#The_let_prefix"),
("Term" , "( )" , "term" , "language/operators#term_(_)"),
("Operator" , "( )" , "postcircumfix" , "language/operators#postcircumfix_(_)"),
("Method" , "subst-mutate" , "method" , "type/Str#method_subst-mutate"),
("Method" , "required" , "method" , "type/Attribute#method_required"),
("Method" , "readonly" , "method" , "type/Attribute#method_readonly"),
("Operator" , "(+), infix ⊎" , "infix" , "language/operators#infix_(+),_infix_⊎"),
("Sub" , "pop" , "sub" , "type/independent-routines#sub_pop"),
("Routine" , "chop" , "routine" , "type/Str#routine_chop"),
("Operator" , "~&gt;" , "infix" , "language/operators#infix_~&gt;"),
("Operator" , "^fff^" , "infix" , "language/operators#infix_^fff^"),
("Operator" , "and" , "infix" , "language/operators#infix_and"),
("Operator" , "%%" , "infix" , "language/operators#infix_%%"),
("Method" , "annotations" , "method" , "type/CallFrame#method_annotations"),
("Operator" , "-" , "prefix" , "language/operators#prefix_-"),
("Operator" , "-" , "infix" , "language/operators#infix_-"),
("Method" , "Date" , "method" , "type/Str#method_Date"),
("Method" , "add" , "method" , "type/BagHash#method_add"),
("Method" , "starts-with" , "method" , "type/Str#method_starts-with"),
("Routine" , "val" , "routine" , "type/Str#routine_val"),
("Operator" , "::=" , "infix" , "language/operators#infix_::="),
("Sub" , "open" , "sub" , "type/independent-routines#sub_open"),
("Routine" , "printf" , "routine" , "type/independent-routines#routine_printf"),
("Operator" , "x" , "infix" , "language/operators#infix_x"),
("Operator" , "xor" , "infix" , "language/operators#infix_xor"),
("Routine" , "rindex" , "routine" , "type/Str#routine_rindex"),
("Operator" , "(&lt;), infix ⊂" , "infix" , "language/operators#infix_(&lt;),_infix_⊂"),
("Routine" , "EVAL" , "routine" , "type/independent-routines#routine_EVAL"),
("Routine" , "squish" , "routine" , "type/independent-routines#routine_squish"),
("Operator" , "coll" , "infix" , "language/operators#infix_coll"),
("Operator" , "lt" , "infix" , "language/operators#infix_lt"),
("Operator" , "but" , "infix" , "language/operators#infix_but"),
("Sub" , "mkdir" , "sub" , "type/independent-routines#sub_mkdir"),
("Method" , "grab" , "method" , "type/Baggy#method_grab"),
("Method" , "Bool" , "method" , "type/Baggy#method_Bool"),
("Method" , "Bool" , "method" , "type/StrDistance#method_Bool"),
("Method" , "Bool" , "method" , "type/Str#method_Bool"),
("Operator" , "constant" , "prefix" , "language/variables#The_constant_prefix"),
("Routine" , "lines" , "routine" , "type/Str#routine_lines"),
("Sub" , "EVALFILE" , "sub" , "type/independent-routines#sub_EVALFILE"),
("Routine" , "flip" , "routine" , "type/Str#routine_flip"),
("Operator" , ":" , "infix" , "language/operators#infix_:"),
("Operator" , "~~" , "infix" , "language/operators#infix_~~"),
("Method" , "trans" , "method" , "type/Str#method_trans"),
("Routine" , "parse-names" , "routine" , "type/Str#routine_parse-names"),
("Method" , "Capture" , "method" , "type/Signature#method_Capture"),
("Method" , "Capture" , "method" , "type/Str#method_Capture"),
("Operator" , "≢" , "infix" , "language/operators#infix_≢"),
("Method" , "Num" , "method" , "type/Str#method_Num"),
("Method" , "new-from-pairs" , "method" , "type/Baggy#method_new-from-pairs"),
("Operator" , "cmp" , "infix" , "language/operators#infix_cmp"),
("Method" , "ACCEPTS" , "method" , "type/Baggy#method_ACCEPTS"),
("Method" , "ACCEPTS" , "method" , "type/Signature#method_ACCEPTS"),
("Method" , "ACCEPTS" , "method" , "type/Str#method_ACCEPTS"),
("Operator" , "(==), infix ≡" , "infix" , "language/operators#infix_(==),_infix_≡"),
("Operator" , "&lt;" , "infix" , "language/operators#infix_&lt;"),
("Operator" , "lcm" , "infix" , "language/operators#infix_lcm"),
("Method" , "rw" , "method" , "type/Attribute#method_rw"),
("Operator" , "^.." , "infix" , "language/operators#infix_^.."),
("Routine" , "tc" , "routine" , "type/Str#routine_tc"),
("Sub" , "flat" , "sub" , "type/independent-routines#sub_flat"),
("Routine" , "chomp" , "routine" , "type/Str#routine_chomp"),
("Operator" , "does" , "infix" , "language/operators#infix_does"),
("Operator" , "(|), infix ∪" , "infix" , "language/operators#infix_(|),_infix_∪"),
("Operator" , "*" , "infix" , "language/operators#infix_*"),
("Operator" , "X" , "infix" , "language/operators#infix_X"),
("Operator" , "=&gt;" , "infix" , "language/operators#infix_=&gt;"),
("Operator" , "++" , "prefix" , "language/operators#prefix_++"),
("Operator" , "++" , "postfix" , "language/operators#postfix_++"),
("Sub" , "spurt" , "sub" , "type/independent-routines#sub_spurt"),
("Operator" , "==, infix ⩵" , "infix" , "language/operators#infix_==,_infix_⩵"),
("Method" , "values" , "method" , "type/Baggy#method_values"),
("Sub" , "undefine" , "sub" , "type/independent-routines#sub_undefine"),
("Sub" , "lastcall" , "sub" , "type/independent-routines#sub_lastcall"),
("Operator" , "fff^" , "infix" , "language/operators#infix_fff^"),
("Operator" , "&lt;&gt;" , "postcircumfix" , "language/operators#postcircumfix_&lt;&gt;"),
("Operator" , "~" , "prefix" , "language/operators#prefix_~"),
("Operator" , "~" , "infix" , "language/operators#infix_~"),
("Method" , "hash" , "method" , "type/Baggy#method_hash"),
("Operator" , "« »" , "postcircumfix" , "language/operators#postcircumfix_«_»"),
("Operator" , "&lt;==" , "infix" , "language/operators#infix_&lt;=="),
("Operator" , "= (item assignment)" , "infix" , "language/operators#infix_=_(item_assignment)"),
("Operator" , "~&lt;" , "infix" , "language/operators#infix_~&lt;"),
("Operator" , "o, infix ∘" , "infix" , "language/operators#infix_o,_infix_∘"),
("Operator" , "^ff^" , "infix" , "language/operators#infix_^ff^"),
("Method" , "DateTime" , "method" , "type/Str#method_DateTime"),
("Sub" , "emit" , "sub" , "type/independent-routines#sub_emit"),
("Method" , "indent" , "method" , "type/Str#method_indent"),
("Operator" , "before" , "infix" , "language/operators#infix_before"),
("Method" , "before" , "method" , "type/StrDistance#method_before"),
("Sub" , "put" , "sub" , "type/independent-routines#sub_put"),
("Operator" , "||" , "infix" , "language/operators#infix_||"),
("Operator" , "%" , "infix" , "language/operators#infix_%"),
("Routine" , "unique" , "routine" , "type/independent-routines#routine_unique"),
("Routine" , "repeated" , "routine" , "type/independent-routines#routine_repeated"),
("Operator" , "=:=" , "infix" , "language/operators#infix_=:="),
("Operator" , "+&lt;" , "infix" , "language/operators#infix_+&lt;"),
("Operator" , "ff^" , "infix" , "language/operators#infix_ff^"),
("Routine" , "words" , "routine" , "type/Str#routine_words"),
("Operator" , "~&amp;" , "infix" , "language/operators#infix_~&amp;"),
("Method" , "encode" , "method" , "type/Str#method_encode"),
("Operator" , "andthen" , "infix" , "language/operators#infix_andthen"),
("Sub" , "shell" , "sub" , "type/independent-routines#sub_shell"),
("Method" , "SetHash" , "method" , "type/Baggy#method_SetHash"),
("Sub" , "prompt" , "sub" , "type/independent-routines#sub_prompt"),
("Method" , "remove" , "method" , "type/BagHash#method_remove"),
("Method" , "Numeric" , "method" , "type/StrDistance#method_Numeric"),
("Method" , "Numeric" , "method" , "type/Str#method_Numeric"),
("Method" , "keys" , "method" , "type/Baggy#method_keys"),
("Operator" , "+&gt;" , "infix" , "language/operators#infix_+&gt;"),
("Operator" , "mod" , "infix" , "language/operators#infix_mod"),
("Operator" , "(&amp;), infix ∩" , "infix" , "language/operators#infix_(&amp;),_infix_∩"),
("Operator" , "(&gt;), infix ⊃" , "infix" , "language/operators#infix_(&gt;),_infix_⊃"),
("Method" , "categorize-list" , "method" , "type/Baggy#method_categorize-list"),
("Method" , "params" , "method" , "type/Signature#method_params"),
("Operator" , "**" , "infix" , "language/operators#infix_**"),
("Routine" , "uc" , "routine" , "type/Str#routine_uc"),
("Operator" , "after" , "infix" , "language/operators#infix_after"),
("Method" , "after" , "method" , "type/StrDistance#method_after"),
("Operator" , "ne" , "infix" , "language/operators#infix_ne"),
("Operator" , "=~=" , "infix" , "language/operators#infix_=~="),
("Operator" , "max" , "infix" , "language/operators#infix_max"),
("Operator" , "ge" , "infix" , "language/operators#infix_ge"),
("Method" , "NFC" , "method" , "type/Str#method_NFC"),
("Routine" , "lc" , "routine" , "type/Str#routine_lc"),
("Method" , "elems" , "method" , "type/Baggy#method_elems"),
("Method" , "pairs" , "method" , "type/Baggy#method_pairs"),
("Operator" , "[ ]" , "circumfix" , "language/operators#circumfix_[_]"),
("Operator" , "[ ]" , "postcircumfix" , "language/operators#postcircumfix_[_]"),
("Operator" , "or" , "infix" , "language/operators#infix_or"),
("Operator" , "⊉" , "infix" , "language/operators#infix_⊉"),
("Method" , "Version" , "method" , "type/Str#method_Version"),
("Method" , "file" , "method" , "type/CallFrame#method_file"),
("Method" , "NFKC" , "method" , "type/Str#method_NFKC"),
("Operator" , "∌" , "infix" , "language/operators#infix_∌");
